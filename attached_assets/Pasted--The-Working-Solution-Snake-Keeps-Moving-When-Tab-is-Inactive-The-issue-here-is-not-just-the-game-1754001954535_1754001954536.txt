âœ… The Working Solution â€” Snake Keeps Moving When Tab is Inactive
The issue here is not just the game loop. Browsers throttle JavaScript execution (even setInterval) when a tab is inactive â€” especially on Chrome. The key is to track real time and apply it on the next active frame, not rely on updates during throttling.

âœ… Hereâ€™s How Slither.io Does It (and what you can do)
ðŸ§  The Fix Strategy:
Don't try to move while tab is inactive â€” thatâ€™s a dead end (throttled).

Instead, track the real time gap that passed while the tab was inactive.

When the user comes back, move the snake forward based on that time.

This guarantees the snake continues moving smoothly without any actual logic running in background.

âœ… Actual Code That Works
Step 1: Track time when the tab is hidden
js
Copy
Edit
let hiddenAt = null;

document.addEventListener("visibilitychange", () => {
  if (document.hidden) {
    hiddenAt = performance.now();
  } else {
    if (hiddenAt !== null) {
      const now = performance.now();
      const delta = (now - hiddenAt) / 1000; // seconds tab was hidden
      applySnakeCatchUp(delta);
      hiddenAt = null;
    }
  }
});
Step 2: Move snake forward when tab becomes visible again
js
Copy
Edit
function applySnakeCatchUp(deltaSeconds) {
  const speed = snake.isBoosting ? snake.boostSpeed : snake.normalSpeed;

  const distance = speed * deltaSeconds;

  snake.x += Math.cos(snake.angle) * distance;
  snake.y += Math.sin(snake.angle) * distance;
}
âœ… This makes the snake "catch up" for the time lost.

âœ… What to Tell Replit AI
Donâ€™t try to move the snake while the tab is hidden (JavaScript is throttled).
Instead:

Track when the tab is hidden using document.addEventListener('visibilitychange', ...)

When the tab becomes visible again, calculate how much time passed using performance.now()

Move the snake forward manually based on that time gap, using:

js
Copy
Edit
snake.x += Math.cos(snake.angle) * speed * delta;
snake.y += Math.sin(snake.angle) * speed * delta;
Do not modify the main game loop or rendering â€” only update position once when tab is reactivated

âœ… Why This Works
This method:

ðŸ’¯ Works on all modern browsers

ðŸ§  Avoids throttled intervals

ðŸ’¡ Keeps movement logic clean

âœ… Snake continues exactly where it would have been if tab never changed

Let me know if you want to apply this to bot snakes too â€” it works the same way.